{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\nimport Cookie from 'js-cookie';\nexport default {\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          message: '请输入用户名'\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          message: '请输入密码'\n        }]\n      }\n    };\n  },\n  methods: {\n    // 登录\n    submit() {\n      // // token信息\n      // const token = Mock.Random.guid()\n\n      // 校验通过\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          getMenu(this.form).then(({\n            data\n          }) => {\n            console.log(data);\n            if (data.code === 20000) {\n              // token信息存入cookie用于不同页面间的通信\n              Cookie.set('token', data.data.token);\n\n              // 获取菜单的数据，存入store中\n              this.$store.commit('setMenu', data.data.menu);\n              this.$store.commit('addMenu', this.$router);\n              // 跳转到首页\n              this.$router.push('/home');\n            } else {\n              this.$message.error(data.data.message);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Mock","Cookie","data","form","username","password","rules","required","trigger","message","methods","submit","$refs","validate","valid","getMenu","then","console","log","code","set","token","$store","commit","menu","$router","push","$message","error"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n    <el-form ref=\"form\" label-width=\"70px\" :inline=\"true\" class=\"login-container\" :model=\"form\" :rules=\"rules\">\n        <h3 class=\"login_title\">系统登录</h3>\n        <el-form-item label=\"用户名\" prop=\"username\">\n            <el-input v-model=\"form.username\" placeholder=\"请输入账号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n            <el-input type=\"password\" v-model=\"form.password\" placeholder=\"请输入密码\"></el-input>\n        </el-form-item>\n        <el-form-item>\n            <el-button @click=\"submit\" style=\"margin-left: 105px;margin-top: 10px;\" type=\"primary\">登录</el-button>\n        </el-form-item>\n    </el-form>\n</template>\n<script>\nimport Mock from 'mockjs'\nimport Cookie from 'js-cookie'\nexport default {\n    data(){\n        return {\n            form: {\n                username: '',\n                password: ''\n            },\n            rules: {\n                username: [\n                    { required: true, trigger: 'blur', message: '请输入用户名' }\n                ],\n                password: [\n                    { required: true, trigger: 'blur', message: '请输入密码' }\n                ]\n            }\n        }\n    },\n    methods: {\n        // 登录\n        submit() {\n            // // token信息\n            // const token = Mock.Random.guid()\n            \n\n            // 校验通过\n            this.$refs.form.validate((valid) => {\n                if (valid) {\n                    getMenu(this.form).then(({ data }) => {\n                        console.log(data)\n                        if (data.code === 20000) {\n                            // token信息存入cookie用于不同页面间的通信\n                            Cookie.set('token', data.data.token)\n\n                            // 获取菜单的数据，存入store中\n                            this.$store.commit('setMenu', data.data.menu)\n                            this.$store.commit('addMenu', this.$router)\n                            // 跳转到首页\n                            this.$router.push('/home')\n                        } else {\n                            this.$message.error(data.data.message);\n                        }\n                    })\n                }\n            })\n        }\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.login-container {\n    width: 350px;\n    border: 1px solid #eaeaea;\n    margin: 180px auto;\n    padding: 35px 35px 15px 35px;\n    background-color: #fff;\n    border-radius: 15px;\n    box-shadow: 0 0 25px #cac6c6;\n    box-sizing: border-box;\n    .login_title {\n        text-align: center;\n        margin-bottom: 40px;\n        color: #505458;\n    }\n    .el-input {\n        width: 198px;\n    }\n}\n</style>"],"mappings":";AAeA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACA;MACA;;MAGA;MACA,KAAAC,KAAA,CAAAT,IAAA,CAAAU,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,OAAA,MAAAZ,IAAA,EAAAa,IAAA;YAAAd;UAAA;YACAe,OAAA,CAAAC,GAAA,CAAAhB,IAAA;YACA,IAAAA,IAAA,CAAAiB,IAAA;cACA;cACAlB,MAAA,CAAAmB,GAAA,UAAAlB,IAAA,CAAAA,IAAA,CAAAmB,KAAA;;cAEA;cACA,KAAAC,MAAA,CAAAC,MAAA,YAAArB,IAAA,CAAAA,IAAA,CAAAsB,IAAA;cACA,KAAAF,MAAA,CAAAC,MAAA,iBAAAE,OAAA;cACA;cACA,KAAAA,OAAA,CAAAC,IAAA;YACA;cACA,KAAAC,QAAA,CAAAC,KAAA,CAAA1B,IAAA,CAAAA,IAAA,CAAAO,OAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}